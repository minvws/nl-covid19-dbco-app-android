// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    //androidx/google dependency versions
    ext.androidx_activity_version = "1.1.0"
    ext.androidx_appcompat_version = "1.2.0"
    ext.androidx_core_version = "1.3.2"
    ext.androidx_espresso_version = "3.3.0"
    // Using 1.3.0-alpha7 to make use of newly added PermissionContracts for requesting runtime permissions
    ext.androidx_fragment_version = "1.3.0-alpha07"
    ext.androidx_lifecycle_version = "2.2.0"
    ext.androidx_nav_version = "2.3.0"
    ext.androidx_test_core_version = "1.2.0"
    ext.androidx_test_ext_junit_version = "1.1.2"
    ext.androidx_work_version = "2.4.0"
    ext.coroutines_version = "1.3.8"
    ext.kotlin_version = '1.4.10'
    ext.play_services_base_version = "17.3.0"
    ext.play_services_tasks_version = "17.1.0"
    //3rd-party dependency versions
    ext.groupie_version = "2.8.0"
    ext.junit_version = "4.13"
    ext.moshi_version = "1.9.3"
    ext.mockitokotlin_version = "2.2.0"
    ext.okhttp3_version = "4.8.1"
    ext.retrofit_version = "2.9.0"
    ext.robolectric_version = "4.3.1"
    ext.timber_version = "4.7.1"
    ext.kotlin_serialization_converter_version = "0.8.0"

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$androidx_nav_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext.getVersionCode = { ->
    try {
        def runNumber = System.getenv('GITHUB_RUN_NUMBER')
        if (runNumber) {
            return Integer.parseInt(runNumber)
        }
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'origin/main'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }


    afterEvaluate {
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = "1.8"
                freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
            }
        }

        project.plugins.withId("com.android.base") {
            android {
                compileSdkVersion 29
                defaultConfig {
                    minSdkVersion 23
                    targetSdkVersion 29
                }
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }


}

task clean(type: Delete) {
    delete rootProject.buildDir
}